#include <stdio.h>
#include <stdlib.h>

// 노드 구조체 정의
typedef struct Node {
    int data;
    struct Node* next;
} Node;

// 노드 추가 함수 (리스트의 끝에 추가)
void appendNode(Node** head, int value) {
    Node* newNode = (Node*)malloc(sizeof(Node)); // 새 노드 메모리 할당
    newNode->data = value;
    newNode->next = NULL;

    if (*head == NULL) { // 리스트가 비어있으면 새 노드가 첫 노드가 됨
        *head = newNode;
    } else {
        Node* current = *head;
        while (current->next != NULL) {
            current = current->next;
        }
        current->next = newNode;
    }
}

// 리스트 출력 함수
void printList(Node* head) {
    Node* current = head;
    printf("연결 리스트: ");
    while (current != NULL) {
        printf("%d -> ", current->data);
        current = current->next;
    }
    printf("NULL\n");
}

// 메모리 해제 함수
void freeList(Node* head) {
    Node* current = head;
    while (current != NULL) {
        Node* temp = current;
        current = current->next;
        free(temp);
    }
}

int main() {
    Node* head = NULL;  // 리스트의 시작점(헤드 노드)

    // 노드 추가
    appendNode(&head, 10);
    appendNode(&head, 20);
    appendNode(&head, 30);

    // 리스트 출력
    printList(head);

    // 메모리 해제
    freeList(head);

    return 0;
}
